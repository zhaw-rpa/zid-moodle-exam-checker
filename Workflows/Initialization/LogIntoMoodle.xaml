<Activity mc:Ignorable="sap sap2010" x:Class="LogIntoMoodle" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>844,2529</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>LogIntoMoodle_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Opens the Moodle-Main-Page, which is defined in the setting &quot;moodle_mainpage&quot;, in IE. If no user is currently logged in, getting the credentials to Moodle from WCM and tries to login in three steps (Moodle, Switch Wayf and Switch Edu-Id)." DisplayName="LogIntoMoodle" sap:VirtualizedContainerService.HintSize="854,2364" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="userName" />
      <Variable x:TypeArguments="ss:SecureString" Name="password" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Open Moodle Main Page in IE" sap:VirtualizedContainerService.HintSize="812,2230" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[in_Config(&quot;moodle_mainpage&quot;).ToString]">
      <ui:OpenBrowser.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="778,2131" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="LoginElementExists" />
              <Variable x:TypeArguments="x:Boolean" Name="UsernameElementExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:UiElementExists DisplayName="Check if Login-Element Exists" Exists="[LoginElementExists]" sap:VirtualizedContainerService.HintSize="736,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="af54a3b8-361a-407a-b02a-6a26f66cd170" InformativeScreenshot="64fdc74b26b3170e1eaf2a802e77bfbc" Selector="&lt;html title='*Moodle*' /&gt;&lt;webctrl parentid='service' tag='A' aaname='Login' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]" WaitForReady="INTERACTIVE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[LoginElementExists]" DisplayName="If Login-Element Exists" sap:VirtualizedContainerService.HintSize="736,1469" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="Login-Moodle-Sequence" sap:VirtualizedContainerService.HintSize="577,1322" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="OrganisationInputBoxExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Credentials For Moodle (Invoke Workflow File)" sap:VirtualizedContainerService.HintSize="535,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Initialization\GetAppCredentials.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[userName]</OutArgument>
                      <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password">[password]</OutArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Login Link" sap:VirtualizedContainerService.HintSize="535,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="77231e72-22f8-4ffe-92e1-bd7efa522cd1" InformativeScreenshot="64fdc74b26b3170e1eaf2a802e77bfbc" Selector="&lt;html title='*Moodle*' /&gt;&lt;webctrl parentid='service' tag='A' aaname='Login' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutShort&quot;).ToString)]">
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:UiElementExists DisplayName="Check If Organisation-Input-Box-Element Exists" Exists="[OrganisationInputBoxExists]" sap:VirtualizedContainerService.HintSize="535,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1a3b4c83-977a-417c-9cc7-3d1042f00b60" InformativeScreenshot="9c7a6b6fc91373784cecc0c12329b3eb" Selector="&lt;html title='Auswahl der Organisation' /&gt;&lt;webctrl id='userIdPSelection_iddtext' tag='INPUT' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]">
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[OrganisationInputBoxExists]" DisplayName="If Organisation-Input-Box-Element Exists" sap:VirtualizedContainerService.HintSize="535,811" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence DisplayName="Log into Switch-Sequence" sap:VirtualizedContainerService.HintSize="376,664" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click On ZHAW school-Entry" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition OffsetX="264" OffsetY="5" Position="TopLeft" />
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bdeae94f-927a-4359-8a0b-0eec22d0b7a1" InformativeScreenshot="6e15beca78faa874331927974300203e" Selector="&lt;html title='Auswahl der Organisation' /&gt;&lt;webctrl parentid='userIdPSelection_iddlist' tag='DIV' aaname='*ZHAW*' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" DisplayName="Type Into Input Box 'username'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="True" Text="[userName]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2832e27a-a2a0-494b-94b1-f01dc0b9a423" InformativeScreenshot="0b9adc72ad4291e9c4a56a8c5eebf0f4" Selector="&lt;html title='SWITCH edu-ID Login' /&gt;&lt;webctrl id='username' tag='INPUT' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]" WaitForReady="COMPLETE" />
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <ui:TypeSecureText AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Secure Text Into Input Box 'password'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[password]">
                          <ui:TypeSecureText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="93e2fc49-1714-4e6d-894c-e1825646663f" InformativeScreenshot="9081c5e7a838885aee394ae507ee8437" Selector="&lt;html title='SWITCH edu-ID Login' /&gt;&lt;webctrl id='password' tag='INPUT' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:TypeSecureText.Target>
                        </ui:TypeSecureText>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Button 'Anmelden'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition OffsetX="76" OffsetY="18" Position="TopLeft" />
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0ad68d6c-b3d7-4c5e-9d8c-9241b59da404" InformativeScreenshot="e732e4137f61b2abd5e3fac9b9f19284" Selector="&lt;html title='SWITCH edu-ID Login' /&gt;&lt;webctrl name='_eventId_proceed' tag='BUTTON' type='submit' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <ui:UiElementExists DisplayName="Check if Username-Element Exists" Exists="[UsernameElementExists]" sap:VirtualizedContainerService.HintSize="736,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9fb4c17b-30a9-42e9-8c0d-8c684da3fcb8" InformativeScreenshot="a957d9230249f8c7aadc27f8d4e9814e" Selector="&lt;html url='https://moodle1.zhaw.ch/my/' /&gt;&lt;webctrl parentid='action-menu-toggle-1' tag='SPAN' class='*usertext*' /&gt;" TimeoutMS="[Int32.Parse(in_Config(&quot;TimeoutMedium&quot;).ToString)]">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[UsernameElementExists]" DisplayName="If Username-Element Exists" sap:VirtualizedContainerService.HintSize="736,238" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Successfully logged into Moodle&quot;]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw Login-Failure-Exception" Exception="[New SystemException(&quot;Login into Moodle failed&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:OpenBrowser.Body>
    </ui:OpenBrowser>
  </Sequence>
</Activity>